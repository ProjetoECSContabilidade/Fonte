@model Contabilidade.Models.Usuario
@using BootstrapSupport

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
        <legend><small>Cadastro de </small>Usuario</legend>

        <div class="control-group">
            @Html.Label("Nome", new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Nome, new { @class = "input-xlarge" })
                @Html.ValidationMessageFor(model => model.Nome)
            </div>
        </div>

        <div class="control-group">
            @Html.Label("Login", new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Login, new { @class = "input-xlarge" })
                @Html.ValidationMessageFor(model => model.Login)
            </div>
        </div>

        <div class="control-group">
            @Html.Label("Senha", new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Senha, new { @class = "input-xlarge" })
                @Html.ValidationMessageFor(model => model.Senha)
            </div>
        </div>

        <div class="control-group">
            @Html.Label("Email", new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Email, new { @class = "input-xlarge" })
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>

        <div class="control-group">
            @Html.Label("Cargo", new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownListFor(model => model.Cargo, new SelectList(
                  new List<Object>{
                       new { value = "Gerente" , text = "Gerente"  },
                       new { value = "Coordenador" , text = "Coordenador"  },
                       new { value = "Funcionário" , text = "Funcionário"  },
                    },
                  "value",
                  "text",
                   2))
                @*@Html.EditorFor(model => model.Cargo, new { @class = "input-xlarge" })*@
                @Html.ValidationMessageFor(model => model.Cargo)
            </div>
        </div>

        <div class="control-group">
            @Html.Label("Setor", new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownListFor(model => model.SetorId, new SelectList(Model.SetorList, "Value", "Text"))
                @*@Html.DropDownListFor(model => model.SetorId, Model.SetorList, new { @class = "form-control" })*@
                @*@Html.DropDownList("Id", (IEnumerable<SelectListItem>)ViewBag.Setores)*@
                @*@Html.ValidationMessageFor(model => model.Setor)*@
            </div>
        </div>



        @*<div class="control-group">
                @Html.Label("Setor", new { @class = "control-label" })
                <div class="controls">
                    @Html.DropDownListFor(model => model.Setor.Id, new SelectList(
                      new List<Object>{
                           new { value = 1 , text = "Recursos Humanos"  },
                           new { value = 2, text = "Fiscal" },
                           new { value = 3 , text = "Contábil"}
                        },
                      "value",
                      "text",
                       2))
                    @Html.ValidationMessageFor(model => model.Setor)
                </div>
            </div>*@

        <div class="control-group">
            @Html.Label("Ativo", new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownListFor(model => model.Ativo, new SelectList(
                  new List<Object>{
                       new { value = true , text = "Ativado"  },
                       new { value = false , text = "Desativado"  },
                    },
                  "value",
                  "text",
                   true))
                @*@Html.EditorFor(model => model.Ativo)*@
                @Html.ValidationMessageFor(model => model.Ativo)
            </div>
        </div>

        <div class="form-actions">
            <button type="submit" class="btn btn-primary">Salvar</button>
            @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn " })
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Voltar para a Listagem", "Index")
</div>





@*@model Contabilidade.Models.Usuario

    @{
        ViewBag.Title = "Create";
    }

    <h2>Create</h2>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Usuario</legend>

            <div class="editor-label">
                @Html.LabelFor(model => model.Nome)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Nome)
                @Html.ValidationMessageFor(model => model.Nome)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Cargo)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Cargo)
                @Html.ValidationMessageFor(model => model.Cargo)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Login)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Login)
                @Html.ValidationMessageFor(model => model.Login)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Senha)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Senha)
                @Html.ValidationMessageFor(model => model.Senha)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Email)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Ativo)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Ativo)
                @Html.ValidationMessageFor(model => model.Ativo)
            </div>

            <p>
                <input type="submit" value="Create" />
            </p>
        </fieldset>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
